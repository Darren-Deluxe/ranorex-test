///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace GracePeriodSaved
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The FIREFOX_QA recording.
    /// </summary>
    [TestModule("47d8dd30-49ce-460e-b4c1-df3566d31d18", ModuleType.Recording, 1)]
    public partial class FIREFOX_QA : ITestModule
    {
        /// <summary>
        /// Holds an instance of the NewRepository repository.
        /// </summary>
        public static NewRepository repo = NewRepository.Instance;

        static FIREFOX_QA instance = new FIREFOX_QA();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public FIREFOX_QA()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static FIREFOX_QA Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "5.4.4")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "5.4.4")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.0;

            Init();

            Report.Log(ReportLevel.Info, "Website", "Opening web site 'https://qa.nasdaqprivatemarket.com/site/login.php' with browser 'firefox' in normal mode.", new RecordItemIndex(0));
            Host.Local.OpenBrowser("https://qa.nasdaqprivatemarket.com/site/login.php", "firefox", "", false, false, false, false, false);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3000ms.", new RecordItemIndex(1));
            Delay.Duration(3000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ExactEquity1.LogIn' at 216;14.", repo.ExactEquity1.LogInInfo, new RecordItemIndex(2));
            repo.ExactEquity1.LogIn.Click("216;14");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 15s.", new RecordItemIndex(3));
            Delay.Duration(15000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ExactEquity1' at 704;494.", repo.ExactEquity1.SelfInfo, new RecordItemIndex(4));
            repo.ExactEquity1.Self.Click("704;494");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3000ms.", new RecordItemIndex(5));
            Delay.Duration(3000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ExactEquity1.ContainerMainHGroup2.Grants1' at 29;28.", repo.ExactEquity1.ContainerMainHGroup2.Grants1Info, new RecordItemIndex(6));
            repo.ExactEquity1.ContainerMainHGroup2.Grants1.Click("29;28");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3000ms.", new RecordItemIndex(7));
            Delay.Duration(3000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ExactEquity.TreeItemXML' at 4;5.", repo.ExactEquity.TreeItemXMLInfo, new RecordItemIndex(8));
            repo.ExactEquity.TreeItemXML.Click(new Location(TreeItemXML_Screenshot1, "4;5", TreeItemXML_Screenshot1_Options));
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3000ms.", new RecordItemIndex(9));
            Delay.Duration(3000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ExactEquity1.ContainerMainHGroup2.Options1' at 38;8.", repo.ExactEquity1.ContainerMainHGroup2.Options1Info, new RecordItemIndex(10));
            repo.ExactEquity1.ContainerMainHGroup2.Options1.Click("38;8");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3000ms.", new RecordItemIndex(11));
            Delay.Duration(3000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'ExactEquity.JohnAugustine' at 4;4.", repo.ExactEquity.JohnAugustineInfo, new RecordItemIndex(12));
            repo.ExactEquity.JohnAugustine.DoubleClick(new Location(JohnAugustine_Screenshot2, "4;4", JohnAugustine_Screenshot2_Options));
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3000ms.", new RecordItemIndex(13));
            Delay.Duration(3000, false);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='25 Apr 2016') on item 'ExactEquity1.TextInput'.", repo.ExactEquity1.TextInputInfo, new RecordItemIndex(14));
            //Validate.Attribute(repo.ExactEquity1.TextInputInfo, "Text", "25 Apr 2016");
            //Delay.Milliseconds(100);
            
            Validate_TextInput();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3000ms.", new RecordItemIndex(16));
            Delay.Duration(3000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ExactEquity.Flex.CloseButton' at 30;31.", repo.ExactEquity.Flex.CloseButtonInfo, new RecordItemIndex(17));
            repo.ExactEquity.Flex.CloseButton.Click("30;31");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3000ms.", new RecordItemIndex(18));
            Delay.Duration(3000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Scroll Vertical by 500 units.", new RecordItemIndex(19));
            Mouse.ScrollWheel(500);
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Down item 'ExactEquity.Flex.Thumb' at 2;128.", repo.ExactEquity.Flex.ThumbInfo, new RecordItemIndex(20));
            repo.ExactEquity.Flex.Thumb.MoveTo("2;128");
            Mouse.ButtonDown(System.Windows.Forms.MouseButtons.Left);
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Up item 'ExactEquity.Flex.Thumb' at 3;245.", repo.ExactEquity.Flex.ThumbInfo, new RecordItemIndex(21));
            repo.ExactEquity.Flex.Thumb.MoveTo("3;245");
            Mouse.ButtonUp(System.Windows.Forms.MouseButtons.Left);
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3000ms.", new RecordItemIndex(22));
            Delay.Duration(3000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'ExactEquity.Flex.Participants' at 171;43.", repo.ExactEquity.Flex.ParticipantsInfo, new RecordItemIndex(23));
            repo.ExactEquity.Flex.Participants.DoubleClick("171;43");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3000ms.", new RecordItemIndex(24));
            Delay.Duration(3000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'ExactEquity.Flex.JohnAugustine1' at 4;4.", repo.ExactEquity.Flex.JohnAugustine1Info, new RecordItemIndex(25));
            repo.ExactEquity.Flex.JohnAugustine1.DoubleClick(new Location(JohnAugustine1_Screenshot1, "4;4", JohnAugustine1_Screenshot1_Options));
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3000ms.", new RecordItemIndex(26));
            Delay.Duration(3000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ExactEquity.Flex.Termination' at 48;10.", repo.ExactEquity.Flex.TerminationInfo, new RecordItemIndex(27));
            repo.ExactEquity.Flex.Termination.Click("48;10");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3000ms.", new RecordItemIndex(28));
            Delay.Duration(3000, false);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (ColumnIndex='9') on item 'ExactEquity.Flex.Cell25Apr2016'.", repo.ExactEquity.Flex.Cell25Apr2016Info, new RecordItemIndex(29));
            //Validate.Attribute(repo.ExactEquity.Flex.Cell25Apr2016Info, "ColumnIndex", "9");
            //Delay.Milliseconds(100);
            
            Validate_Cell25Apr2016();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
        CompressedImage TreeItemXML_Screenshot1
        { get { return repo.ExactEquity.TreeItemXMLInfo.GetScreenshot1(new Rectangle(119, 26, 21, 13)); } }

        Imaging.FindOptions TreeItemXML_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

        CompressedImage JohnAugustine_Screenshot2
        { get { return repo.ExactEquity.JohnAugustineInfo.GetScreenshot2(new Rectangle(140, 12, 8, 8)); } }

        Imaging.FindOptions JohnAugustine_Screenshot2_Options
        { get { return Imaging.FindOptions.Default; } }

        CompressedImage JohnAugustine1_Screenshot1
        { get { return repo.ExactEquity.Flex.JohnAugustine1Info.GetScreenshot1(new Rectangle(129, 13, 8, 8)); } }

        Imaging.FindOptions JohnAugustine1_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

#endregion
    }
#pragma warning restore 0436
}
